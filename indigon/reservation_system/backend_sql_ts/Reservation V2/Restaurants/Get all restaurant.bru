meta {
  name: Get all restaurant
  type: http
  seq: 4
}

get {
  url: http://127.0.0.1:3000/api/restaurant/66048a99102de42875e0af4d/all
  body: json
  auth: none
}

body:json {
  {
      "userId": "65f3745c1ff49da901045afb",
      "locationId": "123234234",
      "auth": {
          "access_token": "12313133",
          "refresh_token": "yjfghgfhfgh",
          "expires_in": 122432424324
      }
  }
}

tests {
  test("Response status code is 200", function () {
    expect(res.getStatus()).to.equal(200);
  });
  
  
  test("Response has required fields", function () {
      const responseData = res.getBody();
      
      expect(responseData).to.be.an('object');
      expect(responseData._id).to.exist;
      expect(responseData.name).to.exist;
      expect(responseData.userId).to.exist;
      expect(responseData.locationId).to.exist;
      expect(responseData.tables).to.exist;
      expect(responseData.createdAt).to.exist;
      expect(responseData.updatedAt).to.exist;
      expect(responseData.__v).to.exist;
  });
  
  test("Verify that the 'data' array is present in the response and contains at least one element", function () {
      const responseData = res.getBody();
      
      expect(responseData).to.be.an('object');
      expect(responseData).to.have.property('data').that.is.an('array').and.to.have.lengthOf.at.least(1);
  });
  
  
  test("Verify that the 'userId' array is not empty", function () {
    const responseData = res.getBody();
    
    expect(responseData).to.be.an('object');
    expect(responseData.data).to.be.an('array');
    
    responseData.data.forEach(function(item) {
      expect(item.userId).to.be.an('array').and.to.have.lengthOf.at.least(1, "'userId' array should not be empty");
    });
  });
  
  
  test("Verify that the 'locationId' array is not empty", function () {
      const responseData = res.getBody();
      
      expect(responseData).to.be.an('object');
      expect(responseData.data).to.be.an('array');
      
      responseData.data.forEach(function (item) {
          expect(item.locationId).to.be.an('array').and.to.have.lengthOf.at.least(1, "The 'locationId' array should not be empty");
      });
  });
}
