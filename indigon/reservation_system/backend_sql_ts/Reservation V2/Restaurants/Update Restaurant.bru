meta {
  name: Update Restaurant
  type: http
  seq: 2
}

put {
  url: http://localhost:3001/api/restaurant/65f8552536caf5bea8fea884/65f8585096315ac656cdd31c
  body: json
  auth: none
}

body:json {
  {
      "name": "Awesome Restauramt 3 Updated"
  }
}

tests {
  test("Response status code is 200", function () {
    expect(res.getStatus()).to.equal(200);
  });
  
  
  test("Content-Type header is 'application/json'", function () {
  //   expect(pm.response.headers.get('Content-Type')).to.equal('application/json');
  });
  
  
  test("Response has the required fields", function () {
      const responseData = res.getBody();
  
      expect(responseData).to.be.an('object');
      expect(responseData.status).to.exist;
      expect(responseData.message).to.exist;
      expect(responseData.data).to.exist;
  });
  
  
  test("Validate that the 'data' object has the required fields", function () {
      const responseData = res.getBody();
      const requiredFields = ["_id", "name", "userId", "locationId", "tables", "createdAt", "updatedAt", "__v"];
  
      expect(responseData.data).to.exist;
  
      requiredFields.forEach(function (field) {
          expect(responseData.data).to.have.property(field);
      });
  });
  
  
  test("userId and locationId arrays are not empty", function () {
    const responseData = res.getBody();
  
    expect(responseData.data.userId).to.be.an('array').and.to.have.lengthOf.at.least(1, "userId array should not be empty");
    expect(responseData.data.locationId).to.be.an('array').and.to.have.lengthOf.at.least(1, "locationId array should not be empty");
  });
}
