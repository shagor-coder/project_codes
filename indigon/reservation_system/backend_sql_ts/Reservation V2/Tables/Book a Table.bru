meta {
  name: Book a Table
  type: http
  seq: 2
}

post {
  url: http://127.0.0.1:3000/api/table/6615a2f72ab6cfc412a56294/book
  body: json
  auth: none
}

body:json {
  {
      "tableName": "Table 1",
      "startTime": "2024-03-19T15:18:40.010Z",
      "endTime": "2024-03-19T15:18:40.010Z"
  }
}

tests {
  test("Response status code is 200", function () {
    expect(res.getStatus()).to.equal(200);
  });
  
  
  test("Response has the required fields", function () {
    const responseData = res.getBody();
  
    expect(responseData).to.be.an('object');
    expect(responseData).to.have.property('status');
    expect(responseData).to.have.property('message');
    expect(responseData).to.have.property('bookedInfo');
  });
  
  
  test("startTime and endTime are in a valid time format", function () {
      const responseData = res.getBody();
  
      expect(responseData).to.be.an('object');
      expect(responseData.bookedInfo).to.be.an('array');
  
      responseData.bookedInfo.forEach(function (info) {
          expect(info.startTime).to.match(/^\d{2}:\d{2}$/);
          expect(info.endTime).to.match(/^\d{2}:\d{2}$/);
      });
  });
  
  
  test("The _id should be a non-empty string", function () {
    const responseData = res.getBody();
  
    expect(responseData.bookedInfo).to.exist.and.to.be.an('array');
    
    responseData.bookedInfo.forEach(function (booking) {
      expect(booking._id).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, "Value should not be empty");
    });
  });
  
  
  test("Response time is less than 500ms", function () {
    expect(res.getResponseTime()).to.be.below(500);
  });
}
